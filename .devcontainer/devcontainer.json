// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet
{
	"name": "PowerShell Development",
	// NOTE: This should be kept up to date to match the .NET SDK currently in use on the master branch.
  	// but not mandatory as we fetch the appropriate .NET SDK as needed during build.
	"image": "mcr.microsoft.com/devcontainers/dotnet:dev-10.0-preview-noble",
	"hostRequirements": {
		"cpus": 4
	},

	// Bind the working folder to /powershell instead of /workspaces/PowerShell
	"workspaceMount": "source=${localWorkspaceFolder},target=/powershell,type=bind,consistency=cached",
	"workspaceFolder": "/powershell",

	// Container lifecycle scripts
	// Docs: https://containers.dev/implementors/json_reference/#lifecycle-scripts

	//NOTE: We don't use initializeCommand because that runs on the host and we may not know what OS it is.
	"onCreateCommand": ["/usr/bin/pwsh", "-nop", "-noni", "-f", ".devcontainer/scripts/1-onCreate.ps1"],
	"updateContentCommand": ["/usr/bin/pwsh", "-nop", "-noni", "-f", ".devcontainer/scripts/2-updateContent.ps1"],

	// These lifecycle scripts are non-blocking to loading the codespace and UI by default
	// "postCreateCommand": ["/usr/bin/pwsh", "-nop", "-noni", "-f", ".devcontainer/scripts/3-postCreate.ps1"],
	"postStartCommand": ["/usr/bin/pwsh", "-nop", "-noni", "-f", ".devcontainer/scripts/4-postStart.ps1"],
	// "postAttachCommand": ["/usr/bin/pwsh", "-nop", "-noni", "-f", ".devcontainer/scripts/5-postAttach.ps1"],

	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"settings": {
				"dotnet.defaultSolution": "PowerShell.sln",
				"dotnet.testWindow.useTestingPlatformProtocol": true,
				"csharp.experimental.debug.hotReload": true,
				"powershell.powerShellAdditionalExePaths": {
					"PowerShell-Devcontainer": "/usr/bin/pwsh",
					"PowerShell-DevBuild": "/powershell/debug/pwsh"
				},
				"powershell.powerShellDefaultVersion": "PowerShell-Devcontainer",
				"terminal.integrated.defaultProfile.linux": "pwsh",
				"terminal.integrated.profiles.linux": {
					"pwsh dev": {
						"path": "${workspaceFolder}/debug/pwsh",
						"icon": "terminal-powershell",
						"color": "terminal.ansiMagenta"
					}
				}
			},
			"extensions": [
				"ms-dotnettools.csharp",
				"ms-dotnettools.csdevkit", //Free for open source projects
				"ms-vscode.PowerShell",
				"ms-azure-devops.azure-pipelines",
				"github.vscode-pull-request-github"
			]
		}
	}

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// Generally not necessary because sudo is available in the container.
	// NOTE: if using Windows Docker Desktop or WSL, you need to add options = "metadata,uid=1000,gid=1000" to wsl.conf to avoid permissions errors. You can also uncomment this to use root, but it is not recommended
	// "remoteUser": "root"
}
